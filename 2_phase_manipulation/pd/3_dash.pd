#N canvas 57 77 1223 701 12;
#X obj 217 147 cnv 10 132 160 empty empty empty 20 12 0 14 #c6cfe2
#ffe4b7 0;
#X obj 219 149 cnv 24 128 156 empty empty empty 20 12 0 14 #272b34
#ffe4b7 0;
#X obj 14 293 cnv 10 120 95 empty empty empty 20 12 0 14 #c6cfe2 #ffe4b7
0;
#X obj 16 295 cnv 24 116 91 empty empty empty 20 12 0 14 #272b34 #ffe4b7
0;
#X obj 9 402 cnv 10 110 95 empty empty empty 20 12 0 14 #c6cfe2 #ffe4b7
0;
#X obj 11 404 cnv 24 106 91 empty empty empty 20 12 0 14 #272b34 #ffe4b7
0;
#X obj 11 107 cnv 10 130 130 empty empty empty 20 12 0 14 #c6cfe2 #ffe4b7
0;
#X obj 13 109 cnv 24 126 126 empty empty empty 20 12 0 14 #272b34 #ffe4b7
0;
#X obj 20 661 dac~;
#X obj 20 630 clip~ -1 1;
#X obj 98 630 clip~ -1 1;
#N canvas 561 120 615 300 circle 0;
#X obj 45 39 inlet~ phase;
#X text 142 40 we don't have to provide a label to the inlet but it's
nice to do so that we have an idea of what it's purpose is .;
#X obj 45 121 cos~;
#X obj 101 94 +~ 0.25;
#X obj 101 120 cos~;
#X obj 45 237 outlet~ x;
#X obj 101 186 outlet~ y;
#X text 164 109 draw the circle x = cos(t) \, y = sin(t);
#X text 136 216 ditto for outlets \, adding these x and y labels helps
to keep the purpose of the outlets clear.;
#X connect 0 0 2 0;
#X connect 0 0 3 0;
#X connect 2 0 5 0;
#X connect 3 0 4 0;
#X connect 4 0 6 0;
#X restore 20 597 pd circle;
#X obj 20 116 *~ 3;
#X obj 20 159 expr~ floor($v1);
#X obj 20 409 /~ 3;
#X obj 229 159 wrap~;
#X obj 20 301 +~, f 4;
#X floatatom 61 67 8 0 0 1 num_dashes num_dashes - 0;
#N canvas 68 97 581 184 numbox~ 0;
#X obj 62 36 loadbang;
#X msg 62 62 1;
#X obj 62 89 metro 100;
#X obj 62 124 snapshot~;
#X obj 62 150 outlet;
#X obj 10 9 inlet~;
#X text 142 58 This is the vanilla way to take a look at the values
running through an audio signal. A better way might be to use tabwrite~
instead \, and display the waveform in an array. In this case \, when
we set the main phasor to a low frequency \, this option works out
just fine.;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 5 0 3 0;
#X restore 34 184 pd numbox~;
#X floatatom 34 210 8 0 0 0 - - - 0;
#X obj 524 321 phasor~ 50;
#X floatatom 539 367 8 0 0 1 num_dashes num_dashes - 0;
#X floatatom 649 393 8 0 0 1 dash_length dash_length - 0;
#X obj 524 407 *~ 1;
#X obj 524 503 expr~ (floor($v1) + $v2 * $f4) / $f3;
#X obj 603 470 wrap~;
#N canvas 68 97 581 184 numbox~ 0;
#X obj 62 36 loadbang;
#X msg 62 62 1;
#X obj 62 89 metro 100;
#X obj 62 124 snapshot~;
#X obj 62 150 outlet;
#X obj 10 9 inlet~;
#X text 142 58 This is the vanilla way to take a look at the values
running through an audio signal. A better way might be to use tabwrite~
instead \, and display the waveform in an array. In this case \, when
we set the main phasor to a low frequency \, this option works out
just fine.;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 5 0 3 0;
#X restore 241 183 pd numbox~;
#X floatatom 241 209 8 0 0 0 - - - 0;
#X obj 229 273 *~ 0.5;
#X floatatom 258 240 8 0 0 1 dash_length dash_length - 0;
#X obj 647 26 loadbang;
#X msg 647 52 \; num_dashes 3 \; dash_length 0.5;
#N canvas 68 97 581 184 numbox~ 0;
#X obj 62 36 loadbang;
#X msg 62 62 1;
#X obj 62 89 metro 100;
#X obj 62 124 snapshot~;
#X obj 62 150 outlet;
#X obj 10 9 inlet~;
#X text 142 58 This is the vanilla way to take a look at the values
running through an audio signal. A better way might be to use tabwrite~
instead \, and display the waveform in an array. In this case \, when
we set the main phasor to a low frequency \, this option works out
just fine.;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 5 0 3 0;
#X restore 52 330 pd numbox~;
#X floatatom 52 356 8 0 0 0 - - - 0;
#N canvas 68 97 581 184 numbox~ 0;
#X obj 62 36 loadbang;
#X msg 62 62 1;
#X obj 62 89 metro 100;
#X obj 62 124 snapshot~;
#X obj 62 150 outlet;
#X obj 10 9 inlet~;
#X text 142 58 This is the vanilla way to take a look at the values
running through an audio signal. A better way might be to use tabwrite~
instead \, and display the waveform in an array. In this case \, when
we set the main phasor to a low frequency \, this option works out
just fine.;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 5 0 3 0;
#X restore 33 437 pd numbox~;
#X floatatom 33 463 8 0 0 0 - - - 0;
#X text 523 259 This is what the patch would look like compressed into
a single expression, f 29;
#X text 148 104 Scale phase and then floor it to produce a number representing
which dash we're on.;
#X text 144 309 Offset each dot with the new phase from [wrap~] to
give our dashes some length., f 34;
#X text 126 420 Divide by the number of dashes to put our phase back
into a range from 0 to 1, f 31;
#X floatatom 20 7 8 0 0 1 frequency - - 0;
#X obj 20 38 phasor~ 0.5;
#X text 357 159 Wrap the scaled phase to produce a new phase that ramps
from 0 to 1 in sync with the particular dash we're on. Then scale it
by however long we want the dash length to be.;
#N canvas 0 22 450 278 (subpatch) 0;
#X array which_dash 100 float 3;
#A 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2
2;
#X coords 0 2 100 0 200 140 1 0 0;
#X restore 848 117 graph;
#X obj 31 265 tabwrite~ which_dash;
#N canvas 0 22 450 278 (subpatch) 0;
#X array dash_offset 100 float 3;
#A 0 0 0.0237 0.0474 0.0711 0.0948 0.1185 0.1422 0.1659 0.1896 0.2133
0.237 0.2607 0.2844 0.3081 0.3318 0.3555 0.3792 0.4029 0.4266 0.4503
0.474 0.4977 0.5214 0.5451 0.5688 0.5925 0.6162 0.6399 0.6636 0.6873
0.711 0.7347 0.7584 0.7821 0.0158 0.0395 0.0631999 0.0869 0.1106 0.1343
0.158 0.1817 0.2054 0.2291 0.2528 0.2765 0.3002 0.3239 0.3476 0.3713
0.395 0.4187 0.4424 0.4661 0.4898 0.5135 0.5372 0.5609 0.5846 0.6083
0.632 0.6557 0.6794 0.7031 0.7268 0.7505 0.7742 0.0078998 0.0316 0.0552999
0.0789999 0.1027 0.1264 0.1501 0.1738 0.1975 0.2212 0.2449 0.2686 0.2923
0.316 0.3397 0.3634 0.3871 0.4108 0.4345 0.4582 0.4819 0.5056 0.5293
0.553 0.5767 0.6004 0.6241 0.6478 0.6715 0.6952 0.7189 0.7426 0.7663
;
#X coords 0 1 100 0 200 140 1 0 0;
#X restore 848 297 graph;
#X obj 250 383 tabwrite~ dash_offset;
#N canvas 0 22 450 278 (subpatch) 0;
#X array final_phase 100 float 3;
#A 0 0 0.0079 0.0158 0.0237 0.0316 0.0395 0.0474 0.0553 0.0632 0.0711
0.079 0.0869 0.0948 0.1027 0.1106 0.1185 0.1264 0.1343 0.1422 0.1501
0.158 0.1659 0.1738 0.1817 0.1896 0.1975 0.2054 0.2133 0.2212 0.2291
0.237 0.2449 0.2528 0.2607 0.3386 0.3465 0.3544 0.3623 0.3702 0.3781
0.386 0.3939 0.4018 0.4097 0.4176 0.4255 0.4334 0.4413 0.4492 0.4571
0.465 0.4729 0.4808 0.4887 0.4966 0.5045 0.5124 0.5203 0.5282 0.5361
0.544 0.5519 0.5598 0.5677 0.5756 0.5835 0.5914 0.6693 0.6772 0.6851
0.693 0.7009 0.7088 0.7167 0.7246 0.7325 0.7404 0.7483 0.7562 0.7641
0.772 0.7799 0.7878 0.7957 0.8036 0.8115 0.8194 0.8273 0.8352 0.8431
0.851 0.8589 0.8668 0.8747 0.8826 0.8905 0.8984 0.9063 0.9142 0.9221
;
#X coords 0 1 100 0 200 140 1 0 0;
#X restore 848 477 graph;
#X obj 32 525 tabwrite~ final_phase;
#X obj 1068 135 tgl 24 0 empty empty update_graphs 30 11 0 12 #464d5b
#5ea9e8 #7e838e 0 1;
#X msg 252 56 0;
#X obj 1068 197 s update;
#X obj 252 30 r update;
#X obj 250 355 r update;
#X obj 41 239 r update;
#X obj 42 499 r update;
#X obj 1068 171 metro 10;
#X connect 9 0 8 0;
#X connect 10 0 8 1;
#X connect 11 0 9 0;
#X connect 11 1 10 0;
#X connect 12 0 13 0;
#X connect 12 0 15 0;
#X connect 13 0 16 0;
#X connect 13 0 18 0;
#X connect 13 0 44 0;
#X connect 14 0 11 0;
#X connect 14 0 34 0;
#X connect 14 0 48 0;
#X connect 15 0 26 0;
#X connect 15 0 28 0;
#X connect 16 0 14 0;
#X connect 16 0 32 0;
#X connect 17 0 12 1;
#X connect 17 0 14 1;
#X connect 18 0 19 0;
#X connect 20 0 23 0;
#X connect 21 0 23 1;
#X connect 21 0 24 2;
#X connect 22 0 24 3;
#X connect 23 0 25 0;
#X connect 23 0 24 0;
#X connect 25 0 24 1;
#X connect 26 0 27 0;
#X connect 28 0 16 1;
#X connect 28 0 46 0;
#X connect 29 0 28 1;
#X connect 30 0 31 0;
#X connect 32 0 33 0;
#X connect 34 0 35 0;
#X connect 40 0 41 0;
#X connect 41 0 12 0;
#X connect 49 0 56 0;
#X connect 50 0 41 1;
#X connect 52 0 50 0;
#X connect 53 0 46 0;
#X connect 54 0 44 0;
#X connect 55 0 48 0;
#X connect 56 0 51 0;
