#N canvas 296 25 753 747 12;
#X obj 42 237 cnv 10 156 130 empty empty empty 20 12 0 12 #000000 #ffffff 0;
#X obj 44 239 cnv 30 156 190 empty empty apply\ fx 33 12 0 12 #ffffff #000000 0;
#X obj 41 400 cnv 10 156 330 empty empty empty 20 12 0 12 #000000 #ffffff 0;
#X obj 43 402 cnv 30 156 330 empty empty scale\ and\ send\ to\ dac 100 15 0 12 #ffffff #000000 0;
#X obj 42 28 cnv 10 156 190 empty empty empty 20 12 0 12 #000000 #ffffff 0;
#X obj 44 30 cnv 30 156 190 empty empty draw\ the\ circle 20 12 0 12 #ffffff #000000 0;
#X obj 66 644 clip~ -1 1;
#X obj 152 644 clip~ -1 1;
#X obj 66 147 phasor~ 100;
#X msg 66 87 \$1 100;
#X obj 66 117 vline~;
#X obj 86 690 dac~ 1 2;
#N canvas 539 73 450 300 circle~ 0;
#X obj 89 191 cos~;
#X obj 158 165 +~ 0.25;
#X obj 158 191 cos~;
#X obj 89 95 inlet~;
#X obj 89 217 outlet~;
#X obj 158 217 outlet~;
#X connect 0 0 4 0;
#X connect 1 0 2 0;
#X connect 2 0 5 0;
#X connect 3 0 0 0;
#X connect 3 0 1 0;
#X restore 66 177 pd circle~;
#N canvas 0 22 450 300 scale~ 0;
#X obj 289 185 inlet~;
#X obj 289 325 outlet~;
#X obj 530 185 inlet~;
#X obj 374 185 inlet~;
#X obj 374 325 outlet~;
#X obj 601 185 inlet~;
#X obj 461 185 inlet~;
#X obj 461 325 outlet~;
#X obj 673 185 inlet~;
#X obj 289 299 *~, f 6;
#X obj 374 299 *~, f 6;
#X obj 461 299 *~, f 6;
#X connect 0 0 9 0;
#X connect 2 0 9 1;
#X connect 3 0 10 0;
#X connect 5 0 10 1;
#X connect 6 0 11 0;
#X connect 8 0 11 1;
#X connect 9 0 1 0;
#X connect 10 0 4 0;
#X connect 11 0 7 0;
#X restore 66 519 pd scale~;
#N canvas 0 22 450 300 scale~ 0;
#X obj 289 185 inlet~;
#X obj 289 325 outlet~;
#X obj 530 185 inlet~;
#X obj 374 185 inlet~;
#X obj 374 325 outlet~;
#X obj 601 185 inlet~;
#X obj 461 185 inlet~;
#X obj 461 325 outlet~;
#X obj 673 185 inlet~;
#X obj 289 299 *~, f 6;
#X obj 374 299 *~, f 6;
#X obj 461 299 *~, f 6;
#X connect 0 0 9 0;
#X connect 2 0 9 1;
#X connect 3 0 10 0;
#X connect 5 0 10 1;
#X connect 6 0 11 0;
#X connect 8 0 11 1;
#X connect 9 0 1 0;
#X connect 10 0 4 0;
#X connect 11 0 7 0;
#X restore 66 608 pd scale~;
#N canvas 179 204 547 379 offset_mod~ 0;
#N canvas 0 22 450 300 translate~ 0;
#X obj 289 185 inlet~;
#X obj 289 299 +~, f 6;
#X obj 289 325 outlet~;
#X obj 530 185 inlet~;
#X obj 374 185 inlet~;
#X obj 374 299 +~, f 6;
#X obj 374 325 outlet~;
#X obj 601 185 inlet~;
#X obj 461 185 inlet~;
#X obj 461 299 +~, f 6;
#X obj 461 325 outlet~;
#X obj 673 185 inlet~;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 3 0 1 1;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 7 0 5 1;
#X connect 8 0 9 0;
#X connect 9 0 10 0;
#X connect 11 0 9 1;
#X restore 39 263 pd translate~;
#X obj 91 127 phasor~;
#N canvas 63 88 950 304 map~ 0;
#X obj 35 35 inlet~;
#X obj 35 175 expr~ ($v1 - $f2) / ($f3 - $f2) * ($f5 - $f4) + $f4, f 52;
#X obj 305 35 inlet;
#X obj 396 35 inlet;
#X obj 35 252 outlet~;
#X obj 125 85 loadbang;
#X obj 125 137 unpack f f;
#X text 449 81 This is a little awkward here \, b/c of the difference b/w signal and control rate inlets. When you write your own objects in pd \, you can automatically convert from control rate to a signal which solves this problem. It's also possible to do in pd \, but it's a bit cumbersome. You'd need to write your own logic that handles the issue. I've gone around the issue \, by just having slightly different versions of the map~ subpatch. Not a great solution \, but I think it's fine for a really small patch like this.;
#X msg 125 111 0 1;
#X connect 0 0 1 0;
#X connect 1 0 4 0;
#X connect 2 0 1 3;
#X connect 3 0 1 4;
#X connect 5 0 8 0;
#X connect 6 0 1 1;
#X connect 6 1 1 2;
#X connect 8 0 6 0;
#X restore 91 214 pd map~;
#X f 12;
#X obj 39 9 inlet~;
#X obj 56 39 inlet~;
#X obj 39 339 outlet~;
#X obj 83 309 outlet~;
#X obj 91 89 r xoff_mod_freq_\$0;
#X obj 131 159 r xoff_mod_min_\$0;
#X obj 172 187 r xoff_mod_max_\$0;
#X obj 311 127 phasor~;
#N canvas 63 88 950 304 map~ 0;
#X obj 35 35 inlet~;
#X obj 35 175 expr~ ($v1 - $f2) / ($f3 - $f2) * ($f5 - $f4) + $f4, f 52;
#X obj 305 35 inlet;
#X obj 396 35 inlet;
#X obj 35 252 outlet~;
#X obj 125 85 loadbang;
#X obj 125 137 unpack f f;
#X text 449 81 This is a little awkward here \, b/c of the difference b/w signal and control rate inlets. When you write your own objects in pd \, you can automatically convert from control rate to a signal which solves this problem. It's also possible to do in pd \, but it's a bit cumbersome. You'd need to write your own logic that handles the issue. I've gone around the issue \, by just having slightly different versions of the map~ subpatch. Not a great solution \, but I think it's fine for a really small patch like this.;
#X msg 125 111 0 1;
#X connect 0 0 1 0;
#X connect 1 0 4 0;
#X connect 2 0 1 3;
#X connect 3 0 1 4;
#X connect 5 0 8 0;
#X connect 6 0 1 1;
#X connect 6 1 1 2;
#X connect 8 0 6 0;
#X restore 311 214 pd map~;
#X f 12;
#X obj 311 89 r yoff_mod_freq_\$0;
#X obj 351 159 r yoff_mod_min_\$0;
#X obj 392 187 r yoff_mod_max_\$0;
#X connect 0 0 5 0;
#X connect 0 1 6 0;
#X connect 1 0 2 0;
#X connect 2 0 0 3;
#X connect 3 0 0 0;
#X connect 4 0 0 1;
#X connect 7 0 1 0;
#X connect 8 0 2 1;
#X connect 9 0 2 2;
#X connect 10 0 11 0;
#X connect 11 0 0 4;
#X connect 12 0 10 0;
#X connect 13 0 11 1;
#X connect 14 0 11 2;
#X restore 66 292 pd offset_mod~;
#N canvas 150 175 337 545 amp_mod~ 0;
#X obj 64 176 osc~;
#X obj 104 203 osc~, f 7;
#N canvas 63 88 950 304 map~ 0;
#X obj 35 35 inlet~;
#X obj 35 175 expr~ ($v1 - $f2) / ($f3 - $f2) * ($f5 - $f4) + $f4, f 52;
#X obj 305 35 inlet;
#X obj 396 35 inlet;
#X obj 35 252 outlet~;
#X obj 125 85 loadbang;
#X msg 125 111 -1 1;
#X obj 125 137 unpack f f;
#X text 449 81 This is a little awkward here \, b/c of the difference b/w signal and control rate inlets. When you write your own objects in pd \, you can automatically convert from control rate to a signal which solves this problem. It's also possible to do in pd \, but it's a bit cumbersome. You'd need to write your own logic that handles the issue. I've gone around the issue \, by just having slightly different versions of the map~ subpatch. Not a great solution \, but I think it's fine for a really small patch like this.;
#X connect 0 0 1 0;
#X connect 1 0 4 0;
#X connect 2 0 1 3;
#X connect 3 0 1 4;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 7 0 1 1;
#X connect 7 1 1 2;
#X restore 104 289 pd map~;
#X f 12;
#N canvas 0 22 450 300 scale~ 0;
#X obj 289 185 inlet~;
#X obj 289 325 outlet~;
#X obj 530 185 inlet~;
#X obj 374 185 inlet~;
#X obj 374 325 outlet~;
#X obj 601 185 inlet~;
#X obj 461 185 inlet~;
#X obj 461 325 outlet~;
#X obj 673 185 inlet~;
#X obj 289 299 *~, f 6;
#X obj 374 299 *~, f 6;
#X obj 461 299 *~, f 6;
#X connect 0 0 9 0;
#X connect 2 0 9 1;
#X connect 3 0 10 0;
#X connect 5 0 10 1;
#X connect 6 0 11 0;
#X connect 8 0 11 1;
#X connect 9 0 1 0;
#X connect 10 0 4 0;
#X connect 11 0 7 0;
#X restore 28 391 pd scale~;
#N canvas 63 88 950 304 map~ 0;
#X obj 35 35 inlet~;
#X obj 396 35 inlet;
#X obj 35 252 outlet~;
#X obj 221 85 loadbang;
#X msg 221 111 -1 1;
#X obj 221 137 unpack f f;
#X text 449 81 This is a little awkward here \, b/c of the difference b/w signal and control rate inlets. When you write your own objects in pd \, you can automatically convert from control rate to a signal which solves this problem. It's also possible to do in pd \, but it's a bit cumbersome. You'd need to write your own logic that handles the issue. I've gone around the issue \, by just having slightly different versions of the map~ subpatch. Not a great solution \, but I think it's fine for a really small patch like this.;
#X obj 125 34 inlet~;
#X obj 35 175 expr~ ($v1 - $f3) / ($f4 - $f3) * ($f5 - $v2) + $v2, f 52;
#X connect 0 0 8 0;
#X connect 1 0 8 4;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X connect 5 0 8 2;
#X connect 5 1 8 3;
#X connect 7 0 8 1;
#X connect 8 0 2 0;
#X restore 64 360 pd map~;
#X f 12;
#X obj 28 57 inlet~;
#X obj 40 91 inlet~;
#X obj 28 467 outlet~;
#X obj 58 427 outlet~;
#X obj 64 143 r amp_mod_freq_\$0;
#X obj 104 175 r meta_mod_freq_\$0;
#X obj 144 230 r meta_mod_min_\$0;
#X obj 185 260 r meta_mod_max_\$0;
#X obj 145 324 r amp_mod_max_\$0;
#X connect 0 0 4 0;
#X connect 1 0 2 0;
#X connect 2 0 4 1;
#X connect 3 0 7 0;
#X connect 3 1 8 0;
#X connect 4 0 3 3;
#X connect 4 0 3 4;
#X connect 5 0 3 0;
#X connect 6 0 3 1;
#X connect 9 0 0 0;
#X connect 10 0 1 0;
#X connect 11 0 2 1;
#X connect 12 0 2 2;
#X connect 13 0 4 2;
#X restore 66 262 pd amp_mod~;
#N canvas 208 233 287 398 rand_offset~ 0;
#N canvas 382 -663 450 300 center_when_off 0;
#X obj 86 71 sel 0 1;
#X msg 86 97 0 0;
#X obj 86 123 pack f f;
#X obj 86 149 unpack f f;
#X obj 86 38 inlet;
#X obj 86 195 outlet;
#X obj 166 195 outlet;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 5 0;
#X connect 3 1 6 0;
#X connect 4 0 0 0;
#X restore 87 157 pd center_when_off;
#N canvas 0 22 450 300 translate~ 0;
#X obj 289 185 inlet~;
#X obj 289 299 +~, f 6;
#X obj 289 325 outlet~;
#X obj 530 185 inlet~;
#X obj 374 185 inlet~;
#X obj 374 299 +~, f 6;
#X obj 374 325 outlet~;
#X obj 601 185 inlet~;
#X obj 461 185 inlet~;
#X obj 461 299 +~, f 6;
#X obj 461 325 outlet~;
#X obj 673 185 inlet~;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 3 0 1 1;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 7 0 5 1;
#X connect 8 0 9 0;
#X connect 9 0 10 0;
#X connect 11 0 9 1;
#X restore 35 212 pd translate~;
#N canvas 806 253 450 300 rand_xy 0;
#X obj 57 82 metro 1000;
#X obj 57 118 random 201;
#X obj 57 144 - 100;
#X obj 57 170 / 100;
#X obj 137 118 random 201;
#X obj 137 144 - 100;
#X obj 137 170 / 100;
#X obj 57 236 *;
#X obj 137 236 *;
#X obj 57 13 inlet;
#X obj 57 262 outlet;
#X obj 137 262 outlet;
#X obj 124 52 r roff_rate_\$0;
#X obj 155 207 r roff_range_\$0;
#X connect 0 0 1 0;
#X connect 0 0 4 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 7 0;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 6 0 8 0;
#X connect 7 0 10 0;
#X connect 8 0 11 0;
#X connect 9 0 0 0;
#X connect 12 0 0 1;
#X connect 13 0 8 1;
#X connect 13 0 7 1;
#X restore 94 133 pd rand_xy;
#X obj 35 28 inlet~;
#X obj 52 58 inlet~;
#X obj 35 278 outlet~;
#X obj 79 248 outlet~;
#X obj 87 94 r roff_tgl_\$0;
#X connect 0 0 1 3;
#X connect 0 1 1 4;
#X connect 1 0 5 0;
#X connect 1 1 6 0;
#X connect 2 0 1 3;
#X connect 2 1 1 4;
#X connect 3 0 1 0;
#X connect 4 0 1 1;
#X connect 7 0 2 0;
#X connect 7 0 0 0;
#X restore 66 325 pd rand_offset~;
#X obj 66 59 r main_freq_\$0;
#X obj 326 132 cnv 10 300 500 empty empty empty 20 12 0 12 #000000 #ffffff 0;
#X obj 328 134 cnv 30 296 496 empty empty empty 20 12 0 12 #ffffff #000000 0;
#X obj 347 158 hradio 21 1 0 6 empty main_freq_gui_\$0 Main\ Freq 0 -11 0 12 #fcfcfc #000000 #000000 0;
#N canvas 101 140 450 300 snd_mf 0;
#X obj 54 213 * 50;
#X obj 54 183 + 1;
#X obj 22 243 s main_freq_\$0;
#X obj 22 117 sel 5;
#X msg 22 148 12000;
#X obj 22 89 inlet;
#X connect 0 0 2 0;
#X connect 1 0 0 0;
#X connect 3 0 4 0;
#X connect 3 1 1 0;
#X connect 4 0 2 0;
#X connect 5 0 3 0;
#X restore 347 189 pd snd_mf;
#X obj 349 222 cnv 10 90 100 empty empty empty 20 12 0 12 #000000 #ffffff 0;
#X obj 351 224 cnv 30 86 96 empty empty empty 20 12 0 12 #ffffff #000000 0;
#X floatatom 357 230 5 0 2 1 size size_gui_\$0 size_\$0 0;
#X obj 357 260 bng 21 250 50 0 intro_\$0 none intro 25 11 0 12 #fcfcfc #000000 #000000;
#X obj 357 291 bng 21 250 50 0 outro_\$0 none outro 25 11 0 12 #fcfcfc #000000 #000000;
#X obj 453 222 cnv 10 144 100 empty empty empty 20 12 0 12 #000000 #ffffff 0;
#X obj 455 224 cnv 30 140 96 empty empty empty 20 12 0 12 #ffffff #000000 0;
#X floatatom 461 230 5 0 0 1 meta_mod_freq meta_mod_freq_gui_\$0 meta_mod_freq_\$0 0;
#X floatatom 461 260 5 0 0 1 meta_mod_min meta_mod_min_gui_\$0 meta_mod_min_\$0 0;
#X floatatom 461 290 5 0 0 1 meta_mod_max meta_mod_max_gui_\$0 meta_mod_max_\$0 0;
#X obj 389 334 cnv 10 140 70 empty empty empty 20 12 0 12 #000000 #ffffff 0;
#X obj 391 336 cnv 30 136 66 empty empty empty 20 12 0 12 #ffffff #000000 0;
#X floatatom 397 342 5 0 0 1 amp_mod_freq amp_mod_freq_gui_\$0 amp_mod_freq_\$0 0;
#X floatatom 397 372 5 0 0 1 amp_mod_max amp_mod_max_gui_\$0 amp_mod_max_\$0 0;
#X obj 339 415 cnv 10 274 100 empty empty empty 20 12 0 12 #000000 #ffffff 0;
#X obj 341 417 cnv 30 270 96 empty empty empty 20 12 0 12 #ffffff #000000 0;
#X floatatom 481 423 5 0 0 1 yoff_mod_freq yoff_mod_freq_gui_\$0 yoff_mod_freq_\$0 0;
#X floatatom 481 453 5 0 0 1 yoff_mod_min yoff_mod_min_gui_\$0 yoff_mod_min_\$0 0;
#X floatatom 481 483 5 0 0 1 yoff_mod_max yoff_mod_max_gui_\$0 yoff_mod_max_\$0 0;
#X floatatom 347 423 5 0 0 1 xoff_mod_freq xoff_mod_freq_gui_\$0 xoff_mod_freq_\$0 0;
#X floatatom 347 453 5 0 0 1 xoff_mod_min xoff_mod_min_gui_\$0 xoff_mod_min_\$0 0;
#X floatatom 347 483 5 0 0 1 xoff_mod_max xoff_mod_max_gui_\$0 xoff_mod_max_\$0 0;
#X obj 369 526 cnv 10 210 100 empty empty empty 20 12 0 12 #000000 #ffffff 0;
#X obj 371 528 cnv 30 206 96 empty empty empty 20 12 0 12 #ffffff #000000 0;
#X obj 377 533 tgl 21 0 roff_tgl_\$0 roff_tgl_gui_\$0 random_offset_on/off 26 11 0 12 #fcfcfc #000000 #000000 0 1;
#X floatatom 377 564 5 10 2000 1 random_offset_rate_ms roff_rate_gui_\$0 roff_rate_\$0 0;
#X floatatom 377 593 5 0 1 1 random_offset_range roff_range_gui_\$0 roff_range_\$0 0;
#X obj 566 147 bng 30 250 50 0 reset_snd_\$0 reset_rcv_\$0 RESET -40 15 0 12 #fcfcfc #000000 #000000;
#N canvas 250 73 871 447 reset 0;
#X obj 248 25 r reset_snd_\$0;
#X obj 17 19 loadbang;
#X obj 17 45 s reset_rcv_\$0;
#X obj 248 71 f \$0;
#X floatatom 258 107 5 0 0 0 - - - 0;
#X text 287 62 This is how we can get \$0 into messages. Every \$1 in the message below will be replaced with whatever \$0 expands to.;
#X text 14 73 we always go through the gui to reset, f 21;
#X text 430 217 We could choose to just send the messages directly to the synth and not go through the gui \, but then our gui won't get updated. This way \, there's only ever one place to look for the value of a certain parameter.;
#X text 430 307 A simple -- perhaps to simple -- way to create presets \, would be to copy this message and just put in different values. This doesn't allow for presets being dynamic in anyway \, you'd probably need to write some cursed dynamic patching code for that. The else library and JSON are some things worth looking at.;
#X msg 14 319 \; pd dsp \$1;
#X obj 14 163 r pd;
#X obj 14 195 route dsp;
#X obj 14 288 change;
#X obj 14 226 s dsp_tgl_gui_\$0;
#X obj 14 257 r dsp_tgl_\$0;
#X text 12 136 turning dsp off/on with a tgl;
#X msg 248 151 \; main_freq_gui_\$1 0 \; size_gui_\$1 0.3 \; meta_mod_freq_gui_\$1 0 \; meta_mod_min_gui_\$1 0.5 \; meta_mod_max_gui_\$1 0.5 \; amp_mod_freq_gui_\$1 0 \; amp_mod_max_gui_\$1 1 \; xoff_mod_freq_gui_\$1 0 \; xoff_mod_min_gui_\$1 0 \; xoff_mod_max_gui_\$1 0 \; yoff_mod_freq_gui_\$1 0 \; yoff_mod_min_gui_\$1 0 \; yoff_mod_max_gui_\$1 0 \; roff_tgl_gui_\$1 0 \; roff_rate_gui_\$1 120 \; roff_range_gui_\$1 1 \;;
#X text 300 108 <-- This is what the \$0 expands to. Usually starts at 1003 \, but it might be a different number.;
#X connect 0 0 3 0;
#X connect 1 0 2 0;
#X connect 3 0 4 0;
#X connect 3 0 16 0;
#X connect 10 0 11 0;
#X connect 11 0 13 0;
#X connect 12 0 9 0;
#X connect 14 0 12 0;
#X restore 647 163 pd reset;
#X obj 118 489 r size_\$0;
#N canvas 346 241 450 300 intro_outro 0;
#X obj 62 171 vline~;
#X obj 62 207 pow~ 0.8;
#N canvas 733 172 450 300 intro 0;
#X obj 102 116 delay 1000;
#X msg 64 137 0;
#X msg 102 155 1 2500;
#X obj 61 210 outlet;
#X obj 61 60 r intro_\$0;
#X connect 0 0 2 0;
#X connect 1 0 3 0;
#X connect 2 0 3 0;
#X connect 4 0 1 0;
#X connect 4 0 0 0;
#X restore 62 24 pd intro;
#X f 17;
#N canvas 733 172 450 300 outro 0;
#X obj 112 79 delay 1000;
#X msg 55 100 1;
#X msg 112 116 0 2500;
#X obj 52 198 outlet;
#X obj 52 26 r outro_\$0;
#X connect 0 0 2 0;
#X connect 1 0 3 0;
#X connect 2 0 3 0;
#X connect 4 0 1 0;
#X connect 4 0 0 0;
#X restore 73 52 pd outro;
#X f 19;
#X obj 62 233 outlet~;
#X obj 88 103 loadbang;
#X msg 88 129 1;
#X text 126 129 make sure we start with the volume on!;
#X connect 0 0 1 0;
#X connect 1 0 4 0;
#X connect 2 0 0 0;
#X connect 3 0 0 0;
#X connect 5 0 6 0;
#X connect 6 0 0 0;
#X restore 102 559 pd intro_outro;
#X obj 500 321 cnv 2 2 13 empty empty empty 20 12 0 12 #000000 #404040 0;
#X obj 458 403 cnv 2 2 13 empty empty empty 20 12 0 12 #000000 #404040 0;
#X obj 478 514 cnv 2 2 13 empty empty empty 20 12 0 12 #000000 #404040 0;
#X obj 566 184 tgl 30 0 dsp_tgl_\$0 dsp_tgl_gui_\$0 DSP -25 15 0 12 #fcfcfc #000000 #000000 0 1;
#X connect 6 0 11 0;
#X connect 7 0 11 1;
#X connect 8 0 12 0;
#X connect 9 0 10 0;
#X connect 10 0 8 0;
#X connect 12 0 16 0;
#X connect 12 1 16 1;
#X connect 13 0 14 0;
#X connect 13 1 14 1;
#X connect 14 0 6 0;
#X connect 14 1 7 0;
#X connect 15 0 17 0;
#X connect 15 1 17 1;
#X connect 16 0 15 0;
#X connect 16 1 15 1;
#X connect 17 0 13 0;
#X connect 17 1 13 1;
#X connect 18 0 9 0;
#X connect 21 0 22 0;
#X connect 52 0 13 3;
#X connect 52 0 13 4;
#X connect 53 0 14 3;
#X connect 53 0 14 4;
