#N canvas 237 202 736 396 12;
#N canvas 265 249 178 172 circle~ 0;
#X obj 14 14 inlet~;
#X obj 14 99 cos~;
#X obj 14 129 outlet~ x;
#X obj 89 129 outlet~ y;
#X obj 89 69 +~ 0.25;
#X obj 89 99 cos~;
#X connect 0 0 4 0;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 4 0 5 0;
#X connect 5 0 3 0;
#X restore 14 125 pd circle~;
#X obj 14 85 phasor~;
#X obj 14 185 clip~ -1 1;
#X obj 96 185 clip~ -1 1;
#X obj 188 230 clip~ -1 1;
#X obj 14 305 dac~ 1 2 3;
#X obj 188 197 expr~ ($v1 - $f2) / ($f3 - $f2) * ($f5 - $f4) + $f4;
#X floatatom 276 142 5 0 0 1 in_start - - 12;
#X floatatom 288 167 5 0 0 1 in_end - - 12;
#X floatatom 453 129 5 0 0 1 out_start - - 12;
#X floatatom 461 154 5 0 0 1 out_end - - 12;
#X obj 188 127 osc~;
#X floatatom 14 54 5 0 0 1 frequency - - 0;
#X floatatom 188 104 5 0 0 1 brightness - - 0;
#X text 287 230 The function in [expr~] applys a linear mapping from one range to another. in_start and in_end is the input range \, and out_start and out_end is the output range. For more information search for "linear mapping function". The following link is a potential starting point. https://stackoverflow.com/questions/345187/math-mapping-numbers;
#X connect 0 0 2 0;
#X connect 0 1 3 0;
#X connect 1 0 0 0;
#X connect 2 0 5 0;
#X connect 3 0 5 1;
#X connect 4 0 5 2;
#X connect 6 0 4 0;
#X connect 7 0 6 1;
#X connect 8 0 6 2;
#X connect 9 0 6 3;
#X connect 10 0 6 4;
#X connect 11 0 6 0;
#X connect 12 0 1 0;
#X connect 13 0 11 0;
